var documenterSearchIndex = {"docs":
[{"location":"lib/extend/#Extending-TIFF.jl-1","page":"Extending","title":"Extending TIFF.jl","text":"","category":"section"},{"location":"lib/extend/#","page":"Extending","title":"Extending","text":"If you want to extend TIFF.jl to add support for more features or change how TIFF data is loaded, you have come to right place.","category":"page"},{"location":"lib/extend/#","page":"Extending","title":"Extending","text":"WIP","category":"page"},{"location":"contributing/#Contributing-1","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"Supporting all TIFFs is non-trivial and I would greatly appreciate any help from the community in identifying edge cases.","category":"page"},{"location":"contributing/#Add-edge-case-TIFFs-1","page":"Contributing","title":"Add edge case TIFFs","text":"","category":"section"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"There is incredible diversity in the TIFF ecosystem so much so that there is a backronym \"Thousand Incompatible File Formats\" to describe it. I have tried to establish a good baseline test set of TIFFs that should guarantee that TIFF.jl should \"just work tm\" for most people, but if you have a TIFF that you run into that breaks TIFF.jl please do the following:","category":"page"},{"location":"contributing/#","page":"Contributing","title":"Contributing","text":"create a pull request against the  example TIFF repo adding the file. The smaller the file, the better.\nupdate the README table with license information, etc.\nOpen an issue against TIFF.jl with the error message and the expected result","category":"page"},{"location":"lib/public/#Public-interface-1","page":"Public","title":"Public interface","text":"","category":"section"},{"location":"lib/public/#","page":"Public","title":"Public","text":"WIP","category":"page"},{"location":"#TIFF.jl-1","page":"Home","title":"TIFF.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pure-Julia TIFF reader and writer with a focus on correctness üßê","category":"page"},{"location":"#","page":"Home","title":"Home","text":"TIFF (Tagged Image File Format) is a notoriously flexible file format that is very difficult to support properly so why not just link libtiff and call it a day? Because Julia developers are greedy. I wanted to design a clean, minimal, and standards-compliant TIFF reader and writer that can have the speed and compliance of libtiff while adding modern features like streaming, out-of-memory support, and fancy color support. I wanted to design it to be extensible such that packages like OMETIFF.jl can hook right in with minimal overhead. I wanted to leverage the wonderful Julia Arrays ecosystem to do as much lazily and flexibly as possible.","category":"page"},{"location":"#Features-1","page":"Home","title":"Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"TIFF.jl supports:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"[x] The TIFF 6.0 baseline spec\n[x] Thorough testing\n[x] HDR images stored as 32bit or 64bit floats\n[x] BigTIFFs\n[ ] Out-of-memory support (WIP)\n[ ] Streaming from disk (WIP)","category":"page"}]
}
